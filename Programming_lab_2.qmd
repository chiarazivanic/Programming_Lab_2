---
title: "Programming_Lab_2"
author: "Zivanic, Lugli, Battaglio"
format: html
editor: visual
---

#Gender equality in the work place

{r}
library(readr)
library(tidyverse)
library(gapminder)
library(ggplot2)
library(dplyr)
library(knitr)
library(broom)
library(magrittr)
library(knitr)
library(plotly)

getwd()
setwd("/Users/chiarazivanic/Desktop/Programminglab2")
paygapEU <- read.csv("pay_gap_Europe.csv")

head(paygapEU)
summary(paygapEU$GDP)
paygap <- paygapEU |> filter(Country %in% c("Italy", "Switzerland", "Bulgaria")) 
paygap <- paygap |> select(-c(Industry, Electricity_supply, Water_supply, Retail.trade, Transportation, Accommodation, Information, Financial, Professional_scientific, Administrative, Public_administration, Human_health, Arts, Other))

paygap <- paygap |> mutate(Secondary_sector = rowMeans(select(paygap, Construction, Mining, Manufacturing), na.rm=TRUE))

# Esegui la regressione lineare generale 
lin_mod1 <- lm(Secondary_sector ~ GDP, data = paygap)
lin_mod1

# Crea il grafico utilizzando ggplot2
ggplot(paygap, aes(x = GDP, y = Secondary_sector, color = Country)) +
  geom_point(alpha = 0.5) +  
  geom_smooth(data = paygap, method = "lm", se = TRUE, aes(fill = Country), alpha = 0.2) +  # Linee di regressione con intervalli di confidenza
  geom_line(data = data.frame(GDP = unique(paygap$GDP), predictions = predict(lin_mod1, newdata = data.frame(GDP = unique(paygap$GDP)))), 
            aes(x = GDP, y = predictions), color = "black", size = 1) +  # Linea di regressione generale
  labs(title = "Regressione di Secondary_sector su GDP",
       x = "GDP",
       y = "Secondary Sector") +
  theme_minimal()

summary(lin_mod1)

# Milena
### upload the new dataset and section it
```{r}
management <- read.csv("Employment in senior and middle management, female (%).csv")
view(management)
```

### new variable european countries
```{r}
all_countries <- unique(management$Country.Name)
print(all_countries)

# List of European countries
e_countries_management <- c(european_countries <- c(
    "Austria", "Belarus", "Belgium", "Bosnia and Herzegovina", "Bulgaria", 
    "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", 
    "Georgia", "Germany", "Greece", "Hungary", "Iceland", "Ireland", "Italy", 
    "Latvia", "Lithuania", "Luxembourg", "Malta", "Moldova", "Monaco", 
    "Montenegro", "Netherlands", "North Macedonia", "Norway", "Poland", "Portugal", 
    "Romania", "Russia", "San Marino", "Serbia", "Slovakia", "Slovenia", "Spain", 
    "Sweden", "Switzerland", "Turkey", "Ukraine", "United Kingdom", "Vatican City"
))

# Create a new variable 'Country.NameEU' containing only European countries
management <- management %>%
  mutate(Country.NameEU = ifelse(Country.Name %in% european_countries, Country.Name, NA))
view(management)

```
